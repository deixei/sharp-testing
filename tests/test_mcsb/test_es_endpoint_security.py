# This is autogenerated test suite file for sharp testing
import os
import pytest
from pytestsharp import PyTestSharp

@pytest.mark.test_id(103)
def test_es_1_use_endpoint_detection_and_response_edr(ado_config, test_run_id, test_result_id, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret):
	"""
	ES-1 - Use Endpoint Detection and Response (EDR)
	Details:{'configuration': {'name': 'base_config'}, 'description': 'ES-1 - Use Endpoint Detection and Response (EDR)', 'name': 'es_1_use_endpoint_detection_and_response_edr', 'id': 103}

	Args:
		ado_config: The ADO configuration.
		test_run_id: The ID of the test run.
		test_result_id: The ID of the test result.
		ado_url: The ADO URL.
		ado_pat: The ADO PAT.
		ado_project: The ADO Project.
		print_verbose: The verbosity level.
		azure_tenant: The Azure Tenant.
		azure_client_id: The Azure Client ID.
		azure_secret: The Azure Secret.

	Returns:
		None
	"""
	work_item_id=103
	test_case_description="ES-1 - Use Endpoint Detection and Response (EDR)"
	sharp = PyTestSharp(ado_config, test_run_id, test_result_id, work_item_id, test_case_description, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret)

	sharp.show_inputs()

	assert True


@pytest.mark.test_id(104)
def test_es_2_use_modern_anti_malware_software(ado_config, test_run_id, test_result_id, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret):
	"""
	ES-2 - Use modern anti-malware software
	Details:{'configuration': {'name': 'base_config'}, 'description': 'ES-2 - Use modern anti-malware software', 'name': 'es_2_use_modern_anti_malware_software', 'id': 104}

	Args:
		ado_config: The ADO configuration.
		test_run_id: The ID of the test run.
		test_result_id: The ID of the test result.
		ado_url: The ADO URL.
		ado_pat: The ADO PAT.
		ado_project: The ADO Project.
		print_verbose: The verbosity level.
		azure_tenant: The Azure Tenant.
		azure_client_id: The Azure Client ID.
		azure_secret: The Azure Secret.

	Returns:
		None
	"""
	work_item_id=104
	test_case_description="ES-2 - Use modern anti-malware software"
	sharp = PyTestSharp(ado_config, test_run_id, test_result_id, work_item_id, test_case_description, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret)

	sharp.show_inputs()

	assert True


@pytest.mark.test_id(105)
def test_es_3_ensure_anti_malware_software_and_signatures_are_updated(ado_config, test_run_id, test_result_id, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret):
	"""
	ES-3 - Ensure anti-malware software and signatures are updated
	Details:{'configuration': {'name': 'base_config'}, 'description': 'ES-3 - Ensure anti-malware software and signatures are updated', 'name': 'es_3_ensure_anti_malware_software_and_signatures_are_updated', 'id': 105}

	Args:
		ado_config: The ADO configuration.
		test_run_id: The ID of the test run.
		test_result_id: The ID of the test result.
		ado_url: The ADO URL.
		ado_pat: The ADO PAT.
		ado_project: The ADO Project.
		print_verbose: The verbosity level.
		azure_tenant: The Azure Tenant.
		azure_client_id: The Azure Client ID.
		azure_secret: The Azure Secret.

	Returns:
		None
	"""
	work_item_id=105
	test_case_description="ES-3 - Ensure anti-malware software and signatures are updated"
	sharp = PyTestSharp(ado_config, test_run_id, test_result_id, work_item_id, test_case_description, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret)

	sharp.show_inputs()

	assert True

