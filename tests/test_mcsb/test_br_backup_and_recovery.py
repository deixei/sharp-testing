# This is autogenerated test suite file for sharp testing
import os
import pytest
from pytestsharp import PyTestSharp

@pytest.mark.test_id(107)
def test_br_1_ensure_regular_automated_backups(ado_config, test_run_id, test_result_id, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret):
	"""
	BR-1 - Ensure regular automated backups
	Details:{'configuration': {'name': 'base_config'}, 'description': 'BR-1 - Ensure regular automated backups', 'name': 'br_1_ensure_regular_automated_backups', 'id': 107}

	Args:
		ado_config: The ADO configuration.
		test_run_id: The ID of the test run.
		test_result_id: The ID of the test result.
		ado_url: The ADO URL.
		ado_pat: The ADO PAT.
		ado_project: The ADO Project.
		print_verbose: The verbosity level.
		azure_tenant: The Azure Tenant.
		azure_client_id: The Azure Client ID.
		azure_secret: The Azure Secret.

	Returns:
		None
	"""
	work_item_id=107
	test_case_description="BR-1 - Ensure regular automated backups"
	sharp = PyTestSharp(ado_config, test_run_id, test_result_id, work_item_id, test_case_description, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret)

	sharp.show_inputs()

	assert True


@pytest.mark.test_id(108)
def test_br_2_protect_backup_and_recovery_data(ado_config, test_run_id, test_result_id, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret):
	"""
	BR-2 - Protect backup and recovery data
	Details:{'configuration': {'name': 'base_config'}, 'description': 'BR-2 - Protect backup and recovery data', 'name': 'br_2_protect_backup_and_recovery_data', 'id': 108}

	Args:
		ado_config: The ADO configuration.
		test_run_id: The ID of the test run.
		test_result_id: The ID of the test result.
		ado_url: The ADO URL.
		ado_pat: The ADO PAT.
		ado_project: The ADO Project.
		print_verbose: The verbosity level.
		azure_tenant: The Azure Tenant.
		azure_client_id: The Azure Client ID.
		azure_secret: The Azure Secret.

	Returns:
		None
	"""
	work_item_id=108
	test_case_description="BR-2 - Protect backup and recovery data"
	sharp = PyTestSharp(ado_config, test_run_id, test_result_id, work_item_id, test_case_description, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret)

	sharp.show_inputs()

	assert True


@pytest.mark.test_id(109)
def test_br_3_monitor_backups(ado_config, test_run_id, test_result_id, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret):
	"""
	BR-3 - Monitor backups
	Details:{'configuration': {'name': 'base_config'}, 'description': 'BR-3 - Monitor backups', 'name': 'br_3_monitor_backups', 'id': 109}

	Args:
		ado_config: The ADO configuration.
		test_run_id: The ID of the test run.
		test_result_id: The ID of the test result.
		ado_url: The ADO URL.
		ado_pat: The ADO PAT.
		ado_project: The ADO Project.
		print_verbose: The verbosity level.
		azure_tenant: The Azure Tenant.
		azure_client_id: The Azure Client ID.
		azure_secret: The Azure Secret.

	Returns:
		None
	"""
	work_item_id=109
	test_case_description="BR-3 - Monitor backups"
	sharp = PyTestSharp(ado_config, test_run_id, test_result_id, work_item_id, test_case_description, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret)

	sharp.show_inputs()

	assert True


@pytest.mark.test_id(110)
def test_br_4_regularly_test_backup(ado_config, test_run_id, test_result_id, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret):
	"""
	BR-4 - Regularly test backup
	Details:{'configuration': {'name': 'base_config'}, 'description': 'BR-4 - Regularly test backup', 'name': 'br_4_regularly_test_backup', 'id': 110}

	Args:
		ado_config: The ADO configuration.
		test_run_id: The ID of the test run.
		test_result_id: The ID of the test result.
		ado_url: The ADO URL.
		ado_pat: The ADO PAT.
		ado_project: The ADO Project.
		print_verbose: The verbosity level.
		azure_tenant: The Azure Tenant.
		azure_client_id: The Azure Client ID.
		azure_secret: The Azure Secret.

	Returns:
		None
	"""
	work_item_id=110
	test_case_description="BR-4 - Regularly test backup"
	sharp = PyTestSharp(ado_config, test_run_id, test_result_id, work_item_id, test_case_description, ado_url, ado_pat, ado_project, print_verbose, azure_tenant, azure_client_id, azure_secret)

	sharp.show_inputs()

	assert True

